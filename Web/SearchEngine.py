#coding: utf8
#author: Yu Liu (yu.liu55@pactera.com)

from googleapiclient.discovery import build
import math

'''
developerKey: the credential generated by Api account
it will track which account is using google Api
website: https://console.cloud.google.com/apis/api/customsearch.googleapis.com/
credentials?project=zinc-shard-207022
JSON custom search key: lets you develop websites and applications
to retrieve and display search results from Google Custom Search
retreive website:
https://developers.google.com/custom-search/json-api/v1/overview
'''

class SearchEngine(object):
  def __init__(self, custom_search_key='005808576341306023160:yojc6z7o63u',
               developer_key="AIzaSyC1o8pJAwMvaRugaRp9nWtvrGQs2_llEps"):
    self.customSearchkey = custom_search_key
    self.developerKey = developer_key

  def search(self, keywords: str, item_nums=100):
    """
    :param keywords:
    :param item_num:
    :return: [{"link": "www.sina.com.cn", "snippet": "today...."}, {...}]
    """
    service = build("customsearch", "v1",developerKey=self.developerKey)
    result = []
    page_nums = math.ceil(item_nums / 10)
    for i in range(page_nums):
      # q: search item
      # cx: search engine key
      # num: search items returned in each search
      # highRange: the last item number of search result, used for paging
      res = service.cse().list(
        q=keywords,
        cx=self.customSearchkey,
        num=10,
        highRange=(i+1)*10
      ).execute()
      selected_item = res['items']
      for i in range(len(selected_item)):
        snippet = selected_item[i]['snippet'].replace('\n', '')
        link = selected_item[i]['displayLink']
        title = selected_item[i]['title']
        single_result = {
          "link": link,
          "snippet": snippet,
          "title": title
        }
        result.append(single_result)
    return result
